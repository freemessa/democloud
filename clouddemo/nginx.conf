
#user  root;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
   charset 	    utf-8;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
   client_header_buffer_size 10240k;

    #gzip  on;

    #map $http_upgrade $connection_upgrade {
    #    default upgrade;
    #    '' close;
   # }
	
   upstream nacos {
        server 192.168.216.111:9080 weight=1 max_fails=2 fail_timeout=10s;
    }
	
   upstream sentinel {
        server 192.168.216.111:8858 weight=1 max_fails=2 fail_timeout=10s;
    }

   upstream flowable{
        server 192.168.216.111:8080 weight=1 max_fails=2 fail_timeout=10s;
    }

  upstream minio{
        server 192.168.216.111:9002 weight=1 max_fails=2 fail_timeout=10s;
    }
  upstream websocket.com {
        hash $remote_addr consistent;
        server 192.168.216.111:9002;
    }
  upstream minio-api{
        server 192.168.216.111:9001 weight=1 max_fails=2 fail_timeout=10s;
    }

 upstream elasticsearch{
        server 192.168.216.111:5601 weight=1 max_fails=2 fail_timeout=10s;
    }
		
    # === HTTP-server块 ===
    server{
        listen  8848;
        server_name localhost;
        location / {
            proxy_pass http://nacos;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header REMOTE-HOST $remote_addr;
            add_header X-Cache $upstream_cache_status;
            add_header Cache-Control no-cache;
        }
    }
	
    server{
        listen  8858;
        server_name localhost;
        location / {
            proxy_pass http://sentinel;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header REMOTE-HOST $remote_addr;
            add_header X-Cache $upstream_cache_status;
            add_header Cache-Control no-cache;
        }
    }

   server{
        listen  8868;
        server_name localhost;
        location / {
            proxy_pass http://flowable;
            proxy_set_header Host $host:$server_port; ## $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header REMOTE-HOST $remote_addr;
            add_header X-Cache $upstream_cache_status;
            add_header Cache-Control no-cache;
        }
    }

  server{
        listen  9002;
        server_name localhost;
        location ~^/ws/ {
            proxy_pass http://websocket.com;
            proxy_http_version 1.1;
            proxy_set_header Host $host:$server_port;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            #proxy_set_header X-real-ip $remote_addr;
            #proxy_set_header X-Forwarded-For $remote_addr;
            #proxy_read_timeout 6000s;
        }
        location / {
            proxy_pass http://minio;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header REMOTE-HOST $remote_addr;
            add_header X-Cache $upstream_cache_status;
            add_header Cache-Control no-cache;
        }
    }

  server{
        listen  9001;
        server_name localhost;
        location / {
            proxy_pass http://minio-api;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header REMOTE-HOST $remote_addr;
 
            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header  Connection "";
            chunked_transfer_encoding off;   
            
            add_header X-Cache $upstream_cache_status;
            add_header Cache-Control no-cache;
        }
    }

 server{
        listen  5601;
        server_name localhost;
        location / {
            proxy_pass http://elasticsearch;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header REMOTE-HOST $remote_addr;
            add_header X-Cache $upstream_cache_status;
            add_header Cache-Control no-cache;
        }
    }

    #server {
    #    listen       8888;
    #    server_name  localhost;
	#
    #    #charset koi8-r;
	#
    #    #access_log  logs/host.access.log  main;
	#	
	#	location / {
	#		root  home;
    #        index index.html index.htm;
	#	}
	#	
	#	location ^~/download {
	#		alias file;                           #d:\tools\02office\nginx-1.19.6\file
	#		autoindex on;
	#		autoindex_format html;
	#		autoindex_exact_size off;
	#		autoindex_localtime on; 
	#		charset utf-8;
	#	}
	#	
	#	location /files {
	#		alias /download;                      #文件目录d:\download
	#		autoindex on;
	#		charset utf-8;
	#	}
	#	
	#	location /soft {
	#		alias /download/software;           #文件目录d:\download\software
	#		autoindex on;
	#		autoindex_format html;
	#		autoindex_exact_size off;
	#		autoindex_localtime on;
	#		charset utf-8;
	#		if ($request_method = 'GET') {
	#			add_header 'Access-Control-Allow-Origin' '*';
	#			add_header 'Access-Control-Allow-Credentials' 'true';
	#			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	#			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	#		}
	#	}
	#	
	#	location ^~/doc/ {                         #文件目录d:\download\doc
	#		root /download/; 
	#		autoindex on;
	#		autoindex_format html;
	#		autoindex_exact_size off;
	#		autoindex_localtime on; 
	#		charset utf-8;
    #    }
	#
    #    location /isr/video {
	#		alias d:/download/video/;             #指定文件目录
	#		allow all;
    #        autoindex on;                         # 启用自动首页功能(是否开启目录浏览)
	#		autoindex_format html;                # 首页格式为HTML(html,xml,json,jsonp)
	#		autoindex_exact_size off;             # 文件大小自动换算(on展示字节数，off展示具体大小)
	#		autoindex_localtime on;               # 按照服务器时间显示文件时间
	#		charset utf-8;
	#
	#		default_type application/octet-stream;# 将当前目录中所有文件的默认MIME类型设置为
    #                                          # application/octet-stream
	#		if ($request_filename ~* ^.*?\.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx)$){
	#			# 当文件格式为上述格式时，将头字段属性Content-Disposition的值设置为"attachment"
	#			add_header Content-Disposition: 'attachment;'; 
	#		}
	#		sendfile on;                          # 开启零复制文件传输功能
	#		sendfile_max_chunk 1m;                # 每个sendfile调用的最大传输量为1MB
	#		tcp_nopush on;                        # 启用最小传输限制功能
	#
	#		#aio on;                              # 启用异步传输
	#		directio 5m;                          # 当文件大于5MB时以直接读取磁盘的方式读取文件
	#		directio_alignment 4096;              # 与磁盘的文件系统对齐
	#		output_buffers 4 32k;                 # 文件输出的缓冲区大小为128KB
	#
	#		limit_rate 10m;                        # 限制下载速度为10MB
	#		limit_rate_after 2m;                  # 当客户端下载速度达到2MB时进入限速模式
	#		max_ranges 4096;                      # 客户端执行范围读取的最大值是4096B
	#		send_timeout 20s;                     # 客户端引发传输超时时间为20s
	#		postpone_output 2048;                 # 当缓冲区的数据达到2048B时再向客户端发送
	#		chunked_transfer_encoding on;         # 启用分块传输标识
	#		
	#		if ($request_method = 'POST') {
	#			add_header 'Access-Control-Allow-Origin' '*';
	#			add_header 'Access-Control-Allow-Credentials' 'true';
	#			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	#			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	#		}
	#		if ($request_method = 'GET') {
	#			add_header 'Access-Control-Allow-Origin' '*';
	#			add_header 'Access-Control-Allow-Credentials' 'true';
	#			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	#			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	#		}
    #    }
	#
    #    #error_page  404              /404.html;
	#
    #    # redirect server error pages to the static page /50x.html
    #    #
    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   html;
    #    }
	#
    #    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #    #
    #    #location ~ \.php$ {
    #    #    proxy_pass   http://127.0.0.1;
    #    #}
	#
    #    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #    #
    #    #location ~ \.php$ {
    #    #    root           html;
    #    #    fastcgi_pass   127.0.0.1:9000;
    #    #    fastcgi_index  index.php;
    #    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    #    include        fastcgi_params;
    #    #}
	#
    #    # deny access to .htaccess files, if Apache's document root
    #    # concurs with nginx's one
    #    #
    #    #location ~ /\.ht {
    #    #    deny  all;
    #    #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
