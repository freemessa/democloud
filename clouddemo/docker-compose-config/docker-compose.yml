version: "3"
services:
  nacos1:
    hostname: nacos1
    container_name: nacos1
    image: nacos/nacos-server:latest
    volumes:
      #官方例子中是基于mysql5.6的，现在改为mysql8需要加入最新的驱动。
      - ./nacos/plugins/mysql/:/home/nacos/plugins/mysql/
      - ./nacos/cluster-logs/nacos1:/home/nacos/logs
      - ./nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties
    ports:
      - "8838:8848"
      - "9838:9848"
      - "9839:9849"
    env_file:
      - ./nacos/env/nacos-ip.env
    restart: always
    depends_on:
      - mysql

  nacos2:
    hostname: nacos2
    image: nacos/nacos-server:latest
    container_name: nacos2
    volumes:
      #官方例子中是基于mysql5.6的，现在改为mysql8需要加入最新的驱动。
      - ./nacos/plugins/mysql/:/home/nacos/plugins/mysql/
      - ./nacos/cluster-logs/nacos2:/home/nacos/logs
      - ./nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties
    ports:
      - "8828:8848"
      - "9828:9848"
      - "9829:9849"
    env_file:
      - ./nacos/env/nacos-ip.env
    restart: always
    depends_on:
      - mysql
  nacos3:
    hostname: nacos3
    image: nacos/nacos-server:latest
    container_name: nacos3
    volumes:
      #官方例子中是基于mysql5.6的，现在改为mysql8需要加入最新的驱动。
      - ./nacos/plugins/mysql/:/home/nacos/plugins/mysql/
      - ./nacos/cluster-logs/nacos3:/home/nacos/logs
      - ./nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties
    ports:
      - "8818:8848"
      - "9818:9848"
      - "9819:9849"
    env_file:l
      - ./nacos/env/nacos-ip.env
    restart: always
    depends_on:
      - mysql
  mysql:
    container_name: mysql-nacos
    image: mysql:8.0
    env_file:
      - ./nacos/env/mysql.env
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3306:3306"
      - "33060:33060"
    command: --lower_case_table_names=1
  nginx:
    image: nginx:1.10
    container_name: nginx-nacos
    restart: always
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./nginx/conf:/etc/nginx #配置文件挂载
      - ./nginx/logx:/etc/nginx/logs #日志文件挂载
      - ./nginx/html:/usr/share/nginx/html #静态资源根目录挂载
      - ./nginx/logs:/var/log/nginx #日志文件挂载
      - ./nginx/filestorage:/usr/local/filestorage #本地文件挂载目录
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"

  sentinel:
    image: bladex/sentinel-dashboard
    container_name: sentinel-dashboard
    restart: always
    environment:
      auth.enabled: "true"
      sentinel.dashboard.auth.username: admin
      sentinel.dashboard.auth.password: admin
      server.servlet.session.timeout: 7200
      JAVA_OPTS: "-Dserver.port=8858 -Dcsp.sentinel.dashboard.server=localhost:8858 -Dproject.name=sentinel-dashboard -Djava.security.egd=file:/dev/./urandom -Dcsp.sentinel.api.port=8719"
    volumes:
      - ./sentinel/logs:/root/logs
    ports:
      - "8858:8858"
    depends_on:
      - nacos1
      - nacos2
      - nacos3

  flowable-ui:
    container_name: flowable-ui
    image: flowable/flowable-ui:6.6.0
    #image: registry.cn-hangzhou.aliyuncs.com/zhengqing/flowable-ui:6.6.0  # 原镜像`flowable/flowable-ui:6.6.0`
    # 端口映射 主机 -> 容器
    ports:
      - "8080:8080"
    volumes:
      - "./flowable-ui/mysql/mysql-connector-java-8.0.22.jar:/app/WEB-INF/lib/mysql-connector-java-8.0.22.jar"
    environment:
      spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver # mysql8驱动
      spring.datasource.url: jdbc:mysql://192.168.137.138:3306/_process?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull&useSSL=false&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true
      spring.datasource.username: root
      spring.datasource.password: root
      flowable.async-executor-activate: false # 关闭定时任务JOB
      flowable.database-schema-update: true # 当Flowable发现库与数据库表结构不一致时，会自动将数据库表结构升级至新版本
    restart: always
    # 节点名称
    hostname: flowable-ui
    depends_on:
      - mysql

  redis:
    image: redis:5.0
    container_name: redis
    restart: always
    command: redis-server /etc/redis/redis.conf --appendonly yes
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data #数据文件挂载
      - ./redis/conf:/etc/redis/redis.conf #配置文件挂载

  rabbitmq:
    image: rabbitmq:3.7.15-management
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=demo
      - RABBITMQ_DEFAULT_PASS=demo
      - RABBITMQ_LOG_BASE=/var/log/rabbitmq
      - TZ=Asia/Shanghai
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq #数据文件挂载
      - ./rabbitmq/log:/var/log/rabbitmq #日志文件挂载
    expose:
      - 5672
    ports:
      - 15672:15672

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "9001:9001"
      - "9002:9002"
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
      MINIO_ROOT_USER: "minio"
      MINIO_ROOT_PASSWORD: "minio12345"
    volumes:
      - ./minio/config:/root/.minio
      - ./minio/minio:/minio
      - ./minio/data1:/data1
      - ./minio/data2:/data2
      - ./minio/data3:/data3
      - ./minio/data4:/data4
    restart: unless-stopped
    hostname: minio
    command: server /data{1...4} --console-address ":9002" --address ":9001"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"

  elasticsearch:
    container_name: elasticsearch-1
    image: elasticsearch:7.12.0
    # 端口映射 主机 -> 容器
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elasticsearch1/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch1/data:/usr/share/elasticsearch/data
      - ./elasticsearch1/plugins:/usr/share/elasticsearch/plugins
      # 挂载日志
      - ./elasticsearch1/ellog:/usr/share/elasticsearch/logs
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms64m -Xmx512m"
      - "discovery.type=single-node"
      - "COMPOSE_PROJECT_NAME=elasticsearch-server"
    restart: always
    # 节点名称
    hostname: elasticsearch_1

  elasticsearch2:
      container_name: elasticsearch-2
      image: elasticsearch:7.12.0
      # 端口映射 主机 -> 容器
      ports:
        - "9201:9200"
      volumes:
        - ./elasticsearch2/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        - ./elasticsearch2/data:/usr/share/elasticsearch/data
        - ./elasticsearch2/plugins:/usr/share/elasticsearch/plugins
        # 挂载日志
        - ./elasticsearch2/ellog:/usr/share/elasticsearch/logs
      environment:
        - http.host=0.0.0.0
        - transport.host=localhost
        - network.host=0.0.0.0
        - "ES_JAVA_OPTS=-Xms64m -Xmx512m"
        - "discovery.type=single-node"
        - "COMPOSE_PROJECT_NAME=elasticsearch-server"
      restart: always
      # 节点名称
      hostname: elasticsearch_2

  kibana:
      container_name: kibana
      # elk版本一致
      image: kibana:7.12.0
      # 端口映射 主机 -> 容器
      ports:
        - "5601:5601"
      volumes:
        - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
      restart: always
      # 节点名称
      hostname: kibana